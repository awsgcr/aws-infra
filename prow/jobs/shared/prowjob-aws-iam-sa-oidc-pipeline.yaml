branch_spec: &branch_spec
  - ^main$
presubmits:
  awsgcr/aws-infra:
    - name: postsubmit-aws-iam-sa-via-iam-policy-json-create
      branches: *branch_spec
      decorate: true
      run_if_changed: '^eks/(project1|project2)/[^/]+/[^/]+/aws/[^/]+/[^/]+/iam-policy\.json$'
      clone_depth: 1
      labels:
        preset-project1-prod-deploy-all: "true"
        git: "true"
      spec:
        serviceAccountName: prowjob-aws-eks-pipeline-base-sa
        containers:
          - image: 821278736125.dkr.ecr.ap-northeast-1.amazonaws.com/aws-infra/prow-ci:20240117
            command:
              - /bin/bash
            args:
              - -c
              - |
                source $(which error-trap)
                cat <<'EOF' > job.sh
                  source $(which error-trap)
                  unset AWS_PROFILE
                  unset AWS_REGION
                  rm -rf .aws/cli/cache 
                  export AWS_REGION=`aws configure get region --profile $cluster`
                  aws eks update-kubeconfig --name $cluster --alias $cluster --profile $cluster
                  echo "Create AWS IAM Role OIDC"
                  eksctl utils associate-iam-oidc-provider --cluster $cluster --approve --profile $cluster
                  aws eks describe-cluster --name $cluster --profile $cluster --query "cluster.identity.oidc.issuer" --output text
                  tmp_in=$(mktemp)
                  tmp_out=$(mktemp)
                  aws-iam-create-policy --policy_name $cluster-$name --policy_json $fullname > $tmp_out
                  cp $tmp_out $tmp_in
                  policy_arn=$(cat $tmp_in)
                  AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query "Account" --profile=$cluster --output text)
                  OIDC_PROVIDER=$(aws eks describe-cluster --name $cluster --profile $cluster --query "cluster.identity.oidc.issuer" --output text | sed -e "s/^https:\/\///")
                  NEW_TRUST_RELATIONSHIP=$(cat <<- EOT
                [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Federated": "arn:aws:iam::${AWS_ACCOUNT_ID}:oidc-provider/${OIDC_PROVIDER}"
                    },
                    "Action": "sts:AssumeRoleWithWebIdentity",
                    "Condition": {
                      "StringEquals": {
                        "${OIDC_PROVIDER}:sub": "system:serviceaccount:${namespace}:${name}"
                      }
                    }
                  }
                 ] 
                EOT
                  )
                  set +e
                  aws iam get-role --role-name ${project}_${env}_${name}_pod_oidc_role --profile=$cluster --output text > test.txt
                  ## if trust_relationship if role exist
                  if [ $? -eq 0 ];then
                    OLD_TRUST_RELATIONSHIP=`aws iam get-role --role-name ${project}_${env}_${name}_pod_oidc_role --query "Role.AssumeRolePolicyDocument" --profile $cluster --output json | jq .Statement`
                    cat > trust.jsonnet << EOD
                {
                    "Version": "2012-10-17",
                    "Statement": $OLD_TRUST_RELATIONSHIP + $NEW_TRUST_RELATIONSHIP
                }
                EOD
                    jsonnet trust.jsonnet > trust.json
                    aws iam update-assume-role-policy --role-name ${project}_${env}_${name}_pod_oidc_role --policy-document file://trust.json --profile=$cluster
                  else
                    cat > trust.jsonnet << EOW
                {
                    "Version": "2012-10-17",
                    "Statement": $NEW_TRUST_RELATIONSHIP
                }
                EOW
                    jsonnet trust.jsonnet > trust.json
                    aws iam create-role --role-name ${project}_${env}_${name}_pod_oidc_role --assume-role-policy-document file://trust.json --description "${project}_${env}_${name}_pod_oidc_role" --profile=$cluster
                    aws iam tag-role --role-name ${project}_${env}_${name}_pod_oidc_role --tags '{"Key": "prow-pipeline", "Value": "y"}' --profile=$cluster
                  fi
                  aws iam attach-role-policy --role-name ${project}_${env}_${name}_pod_oidc_role --policy-arn=$policy_arn --profile=$cluster  
                  kubectl create ns $namespace --context $cluster
                  kubectl create sa $name -n $namespace --context $cluster
                  kubectl annotate serviceaccount -n $namespace $name \
                  eks.amazonaws.com/role-arn=arn:aws:iam::${AWS_ACCOUNT_ID}:role/${project}_${env}_${name}_pod_oidc_role --context $cluster
                  set -e
                EOF
                for-pr-files --script job.sh --regex '^eks/(project1|project2)/[^/]+/[^/]+/aws/[^/]+/[^/]+/iam-policy\.json$' \
                --include_added true \
                --include_modified false

    - name: postsubmit-aws-iam-sa-via-iam-policy-json-update
      branches: *branch_spec
      decorate: true
      run_if_changed: '^eks/(project1|project2)/[^/]+/[^/]+/aws/[^/]+/[^/]+/iam-policy\.json$'
      clone_depth: 1
      labels:
        preset-project1-prod-deploy-all: "true"
        git: "true"
      spec:
        containers:
          - image: 821278736125.dkr.ecr.ap-northeast-1.amazonaws.com/aws-infra/prow-ci:20240117
            command:
              - /bin/bash
            args:
              - -c
              - |
                source $(which error-trap)
                cat <<'EOF' > job.sh
                  source $(which error-trap)
                  unset AWS_PROFILE
                  unset AWS_REGION
                  rm -rf .aws/cli/cache 
                  export AWS_REGION=`aws configure get region --profile $cluster`
                  aws eks update-kubeconfig --name $cluster --alias $cluster --profile $cluster
                  aws iam put-role-policy --role-name ${project}_${env}_${name}_pod_oidc_role --policy-name $cluster-$name --policy-document file://$fullname  --profile=$cluster
                EOF
                for-pr-files --script job.sh --regex '^eks/(project1|project2)/[^/]+/[^/]+/aws/[^/]+/[^/]+/iam-policy\.json$' \
                --include_added false \
                --include_modified true

    - name: postsubmit-aws-iam-sa-via-iam-policy-json-delete
      branches: *branch_spec
      decorate: true
      run_if_changed: '^eks/(project1|project2)/[^/]+/[^/]+/aws/[^/]+/[^/]+/iam-policy\.json$'
      clone_depth: 1
      labels:
        preset-project1-prod-deploy-all: "true"
        git: "true"
      spec:
        containers:
          - image: 821278736125.dkr.ecr.ap-northeast-1.amazonaws.com/aws-infra/prow-ci:20240117
            command:
              - /bin/bash
            args:
              - -c
              - |
                source $(which error-trap)
                cat <<'EOF' > job.sh
                  source $(which error-trap)
                  unset AWS_PROFILE
                  unset AWS_REGION
                  echo "create IAM OIDC"
                  rm -rf .aws/cli/cache 

                  export AWS_REGION=`aws configure get region --profile $cluster`
                  aws eks update-kubeconfig --name $cluster --alias $cluster --profile $cluster
                  eksctl utils associate-iam-oidc-provider --cluster $cluster --approve --profile $cluster
                  aws eks describe-cluster --name $cluster --profile $cluster --query "cluster.identity.oidc.issuer" --output text
                  
                  eksctl delete iamserviceaccount \
                    --cluster=$cluster \
                    --profile=$cluster \
                    --namespace=$namespace \
                    --name=$name
                EOF

                for-pr-files --script job.sh --regex '^eks/(project1|project2)/[^/]+/[^/]+/aws/[^/]+/[^/]+/iam-policy\.json$'

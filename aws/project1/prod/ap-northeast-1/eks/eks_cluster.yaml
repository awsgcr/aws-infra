apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: gitops-prow
  region: ap-northeast-1

iam:
  withOIDC: true

vpc:
  id: "vpc-01ab96404b000e1db" # for example vpc-01ab96404b000e1db
  securityGroup: "sg-049f386fb06b6fd39" # ControlPlaneSecurityGroup, additional security group.
  subnets:
    private:
      ap-northeast-1a: { id: subnet-04ff6fccb052c037b } # aws_prod_nat_eks_sub_1
      ap-northeast-1c: { id: subnet-0bc52c95bdcc176aa } # aws_prod_nat_eks_sub_2
      ap-northeast-1d: { id: subnet-03ac7868e571d2ae5 } # aws_prod_nat_eks_sub_3
  clusterEndpoints: # disable public access to endpoint and only allow private access
    publicAccess:  false # <true|false>
    privateAccess: true  # <true|false>

############################
### Unmanaged Nodegroups ###
############################
nodeGroups:
  - name: fe-ng
    instanceType: m5a.xlarge
    minSize: 1
    maxSize: 3
    desiredCapacity: 2
    volumeSize: 200
    volumeType: gp2
    subnets: # Nodegroups with custom subnet
      - subnet-04ff6fccb052c037b
      - subnet-0bc52c95bdcc176aa
      - subnet-03ac7868e571d2ae5
    privateNetworking: true
    # kubeletExtraConfig:
    #     kubeReserved:
    #         cpu: "300m"
    #         memory: "300Mi"
    #         ephemeral-storage: "1Gi"
    #     kubeReservedCgroup: "/kube-reserved"
    #     systemReserved:
    #         cpu: "300m"
    #         memory: "300Mi"
    #         ephemeral-storage: "1Gi"
    #     evictionHard:
    #         memory.available:  "200Mi"
    #         nodefs.available: "10%"
    #     featureGates:
    #         RotateKubeletServerCertificate: true # has to be enabled, otherwise it will be disabled
    # privateNetworking must be explicitly set for a fully-private cluster, Rather than defaulting this field to `true`,
    # we require users to explicitly set it to make the behaviour explicit and avoid confusion.
    iam:
      withAddonPolicies:
        imageBuilder: true
        certManager: true
        autoScaler: true
        cloudWatch: true
        ebs: true
        fsx: true
        efs: true
    asgMetricsCollection:
      - granularity: 1Minute
        metrics:
          - GroupMinSize
          - GroupMaxSize
          - GroupDesiredCapacity
          - GroupInServiceInstances
          - GroupPendingInstances
          - GroupStandbyInstances
          - GroupTerminatingInstances
          - GroupTotalInstances
    # labels:
    #   nodegroup-type: frontend-workloads
    # taints:
    #   - key: special
    #     value: "true"
    #     effect: NoSchedule
    tags:
      k8s.io/cluster-autoscaler/node-template/label/my-cool-label: frontend-workloads
      k8s.io/cluster-autoscaler/node-template/taint/feaster: "true:NoSchedule"
    propagateASGTags: true # add the labels and taints as tags to the Auto Scaling group

############################
#### Managed Nodegroups ####
############################
managedNodeGroups:
  - name: managed-ng
    securityGroups:
      attachIDs: ["sg-0658f4d1e54f670f6"] # aws_prod_eks_managed_node_group_sg
    instanceType: m5.large
    minSize: 1
    maxSize: 3
    desiredCapacity: 1
    volumeSize: 200
    volumeType: gp2
    ssh:
      enableSsm: true
    privateNetworking: true
    iam:
      withAddonPolicies:
        imageBuilder: true
        certManager: true
        autoScaler: true
        cloudWatch: true
        ebs: true
        fsx: true
        efs: true
    tags:
      k8s.io/cluster-autoscaler/node-template/label/my-cool-label: managed-workloads
      k8s.io/cluster-autoscaler/node-template/taint/feaster: "true:NoSchedule"
    propagateASGTags: true # add the labels and taints as tags to the Auto Scaling group

fargateProfiles:
  - name: fargate-kube-system
    selectors:
       - namespace: fargate-kube-system # All workloads in the "fargate-kube-system" Kubernetes namespace will be 
  - name: fargate-dev
    selectors:
      # All workloads in the "dev" Kubernetes namespace matching the following label selectors will be scheduled onto Fargate:
      - namespace: fargate-dev
        labels:
          env: dev
          checks: passed
    tags:
      env: dev
      name: fargate-dev

cloudWatch:
  clusterLogging:
    enableTypes: ["api", "audit", "authenticator", "controllerManager", "scheduler"]
    logRetentionInDays: 7
